/* Generated by wayland-scanner 1.12.0 */

#ifndef SCANNER_TEST_CLIENT_PROTOCOL_H
#define SCANNER_TEST_CLIENT_PROTOCOL_H

#include <stdint.h>
#include <stddef.h>
#include "wayland-client.h"

#ifdef  __cplusplus
extern "C" {
#endif

/**
 * @page page_scanner_test The scanner_test protocol
 * @section page_ifaces_scanner_test Interfaces
 * - @subpage page_iface_wl_scanner_test - 
 * @section page_copyright_scanner_test Copyright
 * <pre>
 *
 * Copyright (C) 2015 The Qt Company Ltd.
 * Contact: http://www.qt.io/licensing/
 *
 * This file is part of the plugins of the Qt Toolkit.
 *
 * $QT_BEGIN_LICENSE:BSD$
 * You may use this file under the terms of the BSD license as follows:
 *
 * "Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 * * Redistributions of source code must retain the above copyright
 * notice, this list of conditions and the following disclaimer.
 * * Redistributions in binary form must reproduce the above copyright
 * notice, this list of conditions and the following disclaimer in
 * the documentation and/or other materials provided with the
 * distribution.
 * * Neither the name of The Qt Company Ltd nor the names of its
 * contributors may be used to endorse or promote products derived
 * from this software without specific prior written permission.
 *
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
 *
 * $QT_END_LICENSE$
 * </pre>
 */
struct wl_scanner_test;

/**
 * @page page_iface_wl_scanner_test wl_scanner_test
 * @section page_iface_wl_scanner_test_api API
 * See @ref iface_wl_scanner_test.
 */
/**
 * @defgroup iface_wl_scanner_test The wl_scanner_test interface
 */
extern const struct wl_interface wl_scanner_test_interface;

#define WL_SCANNER_TEST_GET_SCANNER_TEST 0


/**
 * @ingroup iface_wl_scanner_test
 */
#define WL_SCANNER_TEST_GET_SCANNER_TEST_SINCE_VERSION 1

/** @ingroup iface_wl_scanner_test */
static inline void
wl_scanner_test_set_user_data(struct wl_scanner_test *wl_scanner_test, void *user_data)
{
	wl_proxy_set_user_data((struct wl_proxy *) wl_scanner_test, user_data);
}

/** @ingroup iface_wl_scanner_test */
static inline void *
wl_scanner_test_get_user_data(struct wl_scanner_test *wl_scanner_test)
{
	return wl_proxy_get_user_data((struct wl_proxy *) wl_scanner_test);
}

static inline uint32_t
wl_scanner_test_get_version(struct wl_scanner_test *wl_scanner_test)
{
	return wl_proxy_get_version((struct wl_proxy *) wl_scanner_test);
}

/** @ingroup iface_wl_scanner_test */
static inline void
wl_scanner_test_destroy(struct wl_scanner_test *wl_scanner_test)
{
	wl_proxy_destroy((struct wl_proxy *) wl_scanner_test);
}

/**
 * @ingroup iface_wl_scanner_test
 */
static inline struct wl_scanner_test *
wl_scanner_test_get_scanner_test(struct wl_scanner_test *wl_scanner_test, int32_t fakedata)
{
	struct wl_proxy *id;

	id = wl_proxy_marshal_constructor((struct wl_proxy *) wl_scanner_test,
			 WL_SCANNER_TEST_GET_SCANNER_TEST, &wl_scanner_test_interface, NULL, fakedata);

	return (struct wl_scanner_test *) id;
}

#ifdef  __cplusplus
}
#endif

#endif
